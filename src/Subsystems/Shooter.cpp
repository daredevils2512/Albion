#include "Shooter.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Shooter::Shooter() : Subsystem("Shooter") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    solenoid = RobotMap::shooterSolenoid;
    motor = RobotMap::shooterMotor;
    photoeye = RobotMap::shooterPhotoeye;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void Shooter::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Shooter::SetShooterSpeed(double speed) {
	//sets shooter motor to opposite of speed specified, because motor is wired in reverse
	//on robot
	motor->Set(-speed);
}

void Shooter::SetShooterDirection(frc::DoubleSolenoid::Value dir) {
	//actuates shooter up and down depending on what is specified
	solenoid->Set(dir);
}

bool Shooter::GetPhotoeye() {
	//gets photoeye value checking to see if a boulder is in the shooter
	return photoeye->Get();
}


// Put methods for controlling this subsystem
// here. Call these from Commands.
